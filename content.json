{"pages":[{"title":"","text":"My 1st MarkDown h1 {font-size: 34px;} h1.title {font-size: 38px;} h2 {font-size: 30px;} h3 {font-size: 24px;} h4 {font-size: 18px;} h5 {font-size: 16px;} h6 {font-size: 12px;} code {color: inherit; background-color: rgba(0, 0, 0, 0.04);} pre:not([class]) { background-color: white } code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;} ul.task-list{list-style: none;} code{white-space: pre;} if (window.hljs) { hljs.configure({languages: []}); hljs.initHighlightingOnLoad(); if (document.readyState && document.readyState === \"complete\") { window.setTimeout(function() { hljs.initHighlighting(); }, 0); } } .main-container { max-width: 940px; margin-left: auto; margin-right: auto; } img { max-width:100%; } .tabbed-pane { padding-top: 12px; } .html-widget { margin-bottom: 20px; } button.code-folding-btn:focus { outline: none; } summary { display: list-item; } pre code { padding: 0; } .tabset-dropdown > .nav-tabs { display: inline-table; max-height: 500px; min-height: 44px; overflow-y: auto; border: 1px solid #ddd; border-radius: 4px; } .tabset-dropdown > .nav-tabs > li.active:before { content: \"\"; font-family: 'Glyphicons Halflings'; display: inline-block; padding: 10px; border-right: 1px solid #ddd; } .tabset-dropdown > .nav-tabs.nav-tabs-open > li.active:before { content: \"\"; border: none; } .tabset-dropdown > .nav-tabs.nav-tabs-open:before { content: \"\"; font-family: 'Glyphicons Halflings'; display: inline-block; padding: 10px; border-right: 1px solid #ddd; } .tabset-dropdown > .nav-tabs > li.active { display: block; } .tabset-dropdown > .nav-tabs > li > a, .tabset-dropdown > .nav-tabs > li > a:focus, .tabset-dropdown > .nav-tabs > li > a:hover { border: none; display: inline-block; border-radius: 4px; background-color: transparent; } .tabset-dropdown > .nav-tabs.nav-tabs-open > li { display: block; float: none; } .tabset-dropdown > .nav-tabs > li { display: none; } My 1st MarkDown R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com. When you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this: summary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00 Including Plots You can also embed plots, for example: Note that the echo = FALSE parameter was added to the code chunk to prevent printing of the R code that generated the plot. // add bootstrap table styles to pandoc tables function bootstrapStylePandocTables() { $('tr.odd').parent('tbody').parent('table').addClass('table table-condensed'); } $(document).ready(function () { bootstrapStylePandocTables(); }); $(document).ready(function () { window.buildTabsets(\"TOC\"); }); $(document).ready(function () { $('.tabset-dropdown > .nav-tabs > li').click(function () { $(this).parent().toggleClass('nav-tabs-open'); }); }); (function () { var script = document.createElement(\"script\"); script.type = \"text/javascript\"; script.src = \"https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\"; document.getElementsByTagName(\"head\")[0].appendChild(script); })();","link":"/mark1.html"}],"posts":[{"title":"Adoring","text":"123456789#include &lt;iostream&gt;int main(){ std::cout&lt;&lt;&quot;첫번째 정수 입력 : &quot;; std::cin&gt;&gt; inum1; return 0;}","link":"/2021/03/22/Adoring/"},{"title":"R-DAY1","text":"12345# Factor 범주형 변수# 컴퓨터 &lt;- 숫자로 인식# 문자 숫자 논리형 순으로 저장# ordered = TRUE# levels = c(&quot;정렬&quot;) 12345678910111213141516171819202122232425262728# 1. 사람과 관련된 데이터# - 고객 데이터 (CRM)# 2. 기계와 관련된 데이터# - 제조공정과 관련된 데이터# install.packages(&quot;패키지&quot;) 패키지 설치# 1단계 : 패키지 불러오기install.packages(&quot;ggplot2&quot;)library(ggplot2)# 2단계 : 데이터 불러오기data(&quot;iris&quot;)# 3단계 : 데이터 확인str(iris)# 4단계 : 데이터 가공 하기 (시각화)# 5단계 : 시각화ggplot(data = iris, mapping = aes(x = Petal.Length, y = Petal.Width)) + geom_point() + geom_smooth(method=&quot;loess&quot;, se=F) + #xlim(c(0, 0.1)) + #ylim(c(0, 500000)) + labs(subtitle=&quot;Area Vs Population&quot;, y=&quot;Population&quot;, x=&quot;Area&quot;, title=&quot;Scatterplot&quot;, caption = &quot;Source: midwest&quot;)","link":"/2021/03/22/R-DAY1/"},{"title":"R aes","text":"getwd() 위치확인rm(list = ls()) 모두 지우기 12345678910111213141516171819library(ggplot2)ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, colours = Species)) + geom_point(size = 5) + theme_bw()ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, size = Petal.Length, colours = Species)) + geom_point() + theme_bw()ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, colours = Species)) + geom_point(size = 2) + theme_bw() aes(size = Petal.Lengh, colour = Species)전체 옵션 선택 : aes() 밖에서 = 그래프 종류각각의 데이터별로 옵션을 선택aes(안에서 옵션 설정, 변수명)customize –&gt; scale","link":"/2021/03/23/R-menu/"},{"title":"R test1","text":"패키지 설치 방법 ggplot2와 dplyr 패키지 설치 방법 기재 12install.package(&quot;ggplot2&quot;)install.package(&quot;dplyr&quot;) 패키지 설치 12library(ggplot2)library(dplyr) 라이브러리 연결 액셀 데이터 받아오기12counties &lt;- readxl::read_xlsx(&quot;파일위치/파일이름.xslx&quot;, sheet = 1)glimpse(counties) getwd()로 위치확인 후 진행할 것에 주의glimpse는 현재 데이터를 보여줌 private_work, unemployment를 활용하여 산점도를 작성 region을 기준으로 그룹화 12345ggplot(data = counties, # 데이터 aes(x = private_work, #x축 y = unemployment, #y축 colour = region)) # 색상 = region 4개geom_point() dplyr 함수를 활용하여, 아래 데이터 요약 counties 데이터를 활용합니다. 변수 추출은 region, state, men, women 각 region, state 별 men, wemen 전체 인구수를 구함. 최종 데이터셋 저장 이름은 final_df로 명명 123456789counties %&gt;% select(region, state, county, men, women) %&gt;% # select group_by(region, state) %&gt;% # group_by summarize(total_men = sum(men), #summarize total_women = sum(women)) %&gt;% # head()여기까지 끊는 함수 filter(region == &quot;North Central&quot;) %&gt;% arrange(desc(total_men)) -&gt; final_dfglimpse(final_df) final_df를 기준으로 막대 그래프를 그린다. x축 : state 1개의 region만 선택 12ggplot(final_df, aes(x = state, y = total_men)) +geom_col()","link":"/2021/03/23/R-test1/"},{"title":"Random game 1","text":"가위바위보 1을 입력하면 가위 2를 입력하면 바위 3을 입력하면 보 컴퓨터가 내는 수는 판마다 랜덤(난수) 0을 입력하면 종료 0, 1, 2, 3을 제외한 숫자 입력시 예외처리 게임결과 출력 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576#include &lt;iostream&gt;#include &lt;string&gt;#include &lt;random&gt;using namespace std;string text_temp(int num){ if (num == 1) { return &quot;가위&quot;; } else if (num == 2) { return &quot;바위&quot;; } else { return &quot;보&quot;; }}int main(){ int Count = 1; int player; cout &lt;&lt; &quot;가위바위보&quot; &lt;&lt; endl; random_device rd; mt19937 gen(rd()); uniform_int_distribution&lt;int&gt; dis(1, 3); string com_out; while (1) { int com = dis(gen); cout &lt;&lt; &quot;가위(1)바위(2)보(3)종료(0) : &quot;; cin &gt;&gt; player; Count++; if (player == 0) { cout &lt;&lt; &quot;종료&quot; &lt;&lt; endl; break; } else if (player == com) { cout &lt;&lt; &quot;비겼습니다.&quot; &lt;&lt; endl; cout &lt;&lt; &quot;상대(&quot; &lt;&lt; text_temp(com) &lt;&lt; &quot;) : 플레이어(&quot; &lt;&lt; text_temp(player) &lt;&lt; &quot;)&quot; &lt;&lt; endl; } else if ((player == 1 &amp;&amp; com == 3) || (player == 2 &amp;&amp; com == 1) || (player == 3 &amp;&amp; com == 2)) { cout &lt;&lt; &quot;이겼습니다.&quot; &lt;&lt; endl; cout &lt;&lt; &quot;상대(&quot; &lt;&lt; text_temp(com) &lt;&lt; &quot;) : 플레이어(&quot; &lt;&lt; text_temp(player) &lt;&lt; &quot;)&quot; &lt;&lt; endl; } else if (player &gt; 3) { cout &lt;&lt; &quot;숫자는 1, 2, 3중에서만 입력해주세요.&quot; &lt;&lt; endl; } else { cout &lt;&lt; &quot;졌습니다.&quot; &lt;&lt; endl; cout &lt;&lt; &quot;상대(&quot; &lt;&lt; text_temp(com) &lt;&lt; &quot;) : 플레이어(&quot; &lt;&lt; text_temp(player) &lt;&lt; &quot;)&quot; &lt;&lt; endl; } } return 0;}","link":"/2021/03/23/Random-game-1/"},{"title":"base guide","text":"깃허브에 소스 업로드1git remote 현재 폴더의 원격 레퍼지토리 확인 명령어 1git remote add 원격저장소이름 https://github.com/유저네임/레퍼지토리네임.git 깃허브 저장소의 주소로 원격저장소 생성 작업폴더와 깃허브 저장소가 연동됨. 1git push -u origin master push는 업로드 명령어 수정 후 업데이트123git add 파일명git commit -m &quot;msg&quot;git push commit은 수정한 내용에 대한 코멘터리 소스 내려 받기깃허브 원격 저장소의 Clone or download에서 주소를 복사 복사를 시킬 폴더 생성 IDE로 폴더 오픈 후, 터미널에서 클론 명령어 1git clone https://github.com/유저네임/원격저장소이름.git 내려받아진 폴더로 터미널 이동 1cd 폴더 깃 로그 명령어를 통해 이전 작업내용 확인가능 1git log 이전 반영된 파일 받아오기 1git pull 원격저장소명 브랜치명","link":"/2021/03/23/abase-guide/"},{"title":"git clone","text":"1git clone --depth 1 https://github.com/chinsun9/refactor-2019T1.git commit history 없이 clone 하는 방법–depth 옵션–depth 1 -&gt; 가장 마지막 상태 클론","link":"/2021/03/23/clone/"},{"title":"image upload","text":"#이미지 올리기 1![](../image/r_markdown/pressure-1.png)","link":"/2021/03/23/image-test/"},{"title":"practice","text":"1234a = 1b = 2c = a + bprint(c) 패키지 설치1","link":"/2021/03/22/practice/"},{"title":"temp","text":"R 설치 R을 설치한다. URL: https://www.r-project.org/소스코드 작성 R 소스코드를 작성합니다.1234a &lt;- 1b &lt;- 2c &lt;- a + bprint(c)","link":"/2021/03/22/temp/"}],"tags":[{"name":"C++","slug":"C","link":"/tags/C/"},{"name":"R","slug":"R","link":"/tags/R/"},{"name":"git","slug":"git","link":"/tags/git/"},{"name":"python","slug":"python","link":"/tags/python/"}],"categories":[]}